// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: plain.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - ZTMPlainRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface ZTMPlainRoot : GPBRootObject
@end

#pragma mark - ZTMChannelUserIdentity

typedef GPB_ENUM(ZTMChannelUserIdentity_FieldNumber) {
  ZTMChannelUserIdentity_FieldNumber_Id_p = 1,
  ZTMChannelUserIdentity_FieldNumber_Title = 2,
  ZTMChannelUserIdentity_FieldNumber_BgColor = 3,
  ZTMChannelUserIdentity_FieldNumber_UserName = 4,
};

@interface ZTMChannelUserIdentity : GPBMessage

/** 频道主ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** 频道主头衔 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** 频道主背景色 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bgColor;

/** 用户名(关联获得, 不必存储) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;

@end

#pragma mark - ZTMChannelViewHead

typedef GPB_ENUM(ZTMChannelViewHead_FieldNumber) {
  ZTMChannelViewHead_FieldNumber_ImageSrc = 1,
  ZTMChannelViewHead_FieldNumber_URL = 2,
  ZTMChannelViewHead_FieldNumber_Style = 3,
};

@interface ZTMChannelViewHead : GPBMessage

/** 频道头部的图片地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *imageSrc;

/** 跳转页面内容的地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

/** 跳转页面类型 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *style;

@end

#pragma mark - ZTMChannelViewStyle

typedef GPB_ENUM(ZTMChannelViewStyle_FieldNumber) {
  ZTMChannelViewStyle_FieldNumber_Name = 1,
  ZTMChannelViewStyle_FieldNumber_BgColor = 2,
  ZTMChannelViewStyle_FieldNumber_MajorColor = 3,
  ZTMChannelViewStyle_FieldNumber_SubColor = 4,
  ZTMChannelViewStyle_FieldNumber_DeactiveColor = 5,
};

@interface ZTMChannelViewStyle : GPBMessage

/** 样式名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 背景色 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bgColor;

/** 主要颜色 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *majorColor;

/** 次要其他颜色 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *subColor;

/** 非激活状态颜色 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deactiveColor;

@end

#pragma mark - ZTMChannelViewTab

typedef GPB_ENUM(ZTMChannelViewTab_FieldNumber) {
  ZTMChannelViewTab_FieldNumber_Title = 1,
  ZTMChannelViewTab_FieldNumber_URL = 2,
  ZTMChannelViewTab_FieldNumber_Style = 3,
  ZTMChannelViewTab_FieldNumber_Description_p = 4,
  ZTMChannelViewTab_FieldNumber_EmptyDescription = 5,
};

@interface ZTMChannelViewTab : GPBMessage

/** 标签标题 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** 页面内容的地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

/** 页面类型 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *style;

/** 页面描述 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

/** 数据列表为空时的提示 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *emptyDescription;

@end

#pragma mark - ZTMPunchConfig

typedef GPB_ENUM(ZTMPunchConfig_FieldNumber) {
  ZTMPunchConfig_FieldNumber_LimitTimes = 1,
  ZTMPunchConfig_FieldNumber_Window = 2,
  ZTMPunchConfig_FieldNumber_Emoji = 3,
  ZTMPunchConfig_FieldNumber_Attr = 4,
  ZTMPunchConfig_FieldNumber_Unit = 5,
};

@interface ZTMPunchConfig : GPBMessage

/** 每天打卡限制次数 */
@property(nonatomic, readwrite) int32_t limitTimes;

/** 每天打卡开放时段(05:00:00-10:00:00) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *window;

/** 打卡图标, 逗号分割 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *emoji;

/** 打卡数值属性 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *attr;

/** 打卡数值单位 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *unit;

@end

#pragma mark - ZTMSenseAction

typedef GPB_ENUM(ZTMSenseAction_FieldNumber) {
  ZTMSenseAction_FieldNumber_Title = 1,
  ZTMSenseAction_FieldNumber_Action = 2,
  ZTMSenseAction_FieldNumber_Icon = 3,
  ZTMSenseAction_FieldNumber_SelectedIcon = 4,
};

@interface ZTMSenseAction : GPBMessage

/** 小提示信息 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** 可执行的操作, 多个可逗号分隔 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *action;

/** 默认图标 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 选中(执行过)状态图标 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *selectedIcon;

@end

#pragma mark - ZTMSenseFoot

typedef GPB_ENUM(ZTMSenseFoot_FieldNumber) {
  ZTMSenseFoot_FieldNumber_Txt = 1,
  ZTMSenseFoot_FieldNumber_Icon = 2,
};

@interface ZTMSenseFoot : GPBMessage

/** 描述内容模版 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *txt;

/** 前缀图标 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

@end

#pragma mark - ZTMSensePush

typedef GPB_ENUM(ZTMSensePush_FieldNumber) {
  ZTMSensePush_FieldNumber_LikeByUser = 1,
  ZTMSensePush_FieldNumber_ReplyByUser = 2,
  ZTMSensePush_FieldNumber_ReplyToByUser = 3,
};

@interface ZTMSensePush : GPBMessage

/** 同感推送 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *likeByUser;

/** 评论推送 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *replyByUser;

/** 评论回复推送 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *replyToByUser;

@end

#pragma mark - ZTMVideoConfig

typedef GPB_ENUM(ZTMVideoConfig_FieldNumber) {
  ZTMVideoConfig_FieldNumber_MinDuration = 1,
  ZTMVideoConfig_FieldNumber_MaxDuration = 2,
  ZTMVideoConfig_FieldNumber_IsAllowGallery = 3,
  ZTMVideoConfig_FieldNumber_MaxLengthInRecord = 4,
  ZTMVideoConfig_FieldNumber_MaxLengthInGallery = 5,
};

@interface ZTMVideoConfig : GPBMessage

/** 最短时间(秒) */
@property(nonatomic, readwrite) int32_t minDuration;

/** 最长时间(秒) */
@property(nonatomic, readwrite) int32_t maxDuration;

/** 是否允许从相册选取, 从相册选大小将忽略时间限制 */
@property(nonatomic, readwrite) int32_t isAllowGallery;

/** 在录制时最大上传大小（KB） */
@property(nonatomic, readwrite) uint32_t maxLengthInRecord;

/** 在相册选择时最大上传大小（KB） */
@property(nonatomic, readwrite) uint32_t maxLengthInGallery;

@end

#pragma mark - ZTMChannelInSense

typedef GPB_ENUM(ZTMChannelInSense_FieldNumber) {
  ZTMChannelInSense_FieldNumber_Id_p = 1,
  ZTMChannelInSense_FieldNumber_Category = 2,
  ZTMChannelInSense_FieldNumber_UserId = 3,
  ZTMChannelInSense_FieldNumber_Name = 4,
  ZTMChannelInSense_FieldNumber_Icon = 5,
  ZTMChannelInSense_FieldNumber_Description_p = 6,
  ZTMChannelInSense_FieldNumber_IsActive = 8,
  ZTMChannelInSense_FieldNumber_IsVerify = 9,
  ZTMChannelInSense_FieldNumber_IsRecommend = 10,
  ZTMChannelInSense_FieldNumber_IsAnonymous = 11,
  ZTMChannelInSense_FieldNumber_CreateAt = 12,
  ZTMChannelInSense_FieldNumber_UpdateAt = 13,
  ZTMChannelInSense_FieldNumber_SenseCount = 14,
  ZTMChannelInSense_FieldNumber_SubscribeTimes = 15,
  ZTMChannelInSense_FieldNumber_UpdateDescAt = 16,
  ZTMChannelInSense_FieldNumber_LastPostAt = 17,
};

@interface ZTMChannelInSense : GPBMessage

/** ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** 分类 */
@property(nonatomic, readwrite) int32_t category;

/** 频道创建人的ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

/** 频道名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 频道ICON */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 频道描述 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

/** 是否活动的频道 */
@property(nonatomic, readwrite) int32_t isActive;

/** 是否审核通过 */
@property(nonatomic, readwrite) int32_t isVerify;

/** 是否是推荐 */
@property(nonatomic, readwrite) int32_t isRecommend;

/** 是否匿名, 一般匿名的频道都会增加[匿名]前缀 */
@property(nonatomic, readwrite) int32_t isAnonymous;

/** 创建时间 */
@property(nonatomic, readwrite) uint32_t createAt;

/** 更新时间 */
@property(nonatomic, readwrite) uint32_t updateAt;

/** 频道感言发表次数 */
@property(nonatomic, readwrite) int32_t senseCount;

/** 订阅次数 */
@property(nonatomic, readwrite) int32_t subscribeTimes;

/** 描述更新时间 */
@property(nonatomic, readwrite) uint32_t updateDescAt;

/** 最近发布感言的时间 */
@property(nonatomic, readwrite) uint32_t lastPostAt;

@end

#pragma mark - ZTMMovieDescription

typedef GPB_ENUM(ZTMMovieDescription_FieldNumber) {
  ZTMMovieDescription_FieldNumber_Title = 1,
  ZTMMovieDescription_FieldNumber_Img = 2,
  ZTMMovieDescription_FieldNumber_Mid = 3,
  ZTMMovieDescription_FieldNumber_SubTitle = 4,
  ZTMMovieDescription_FieldNumber_Year = 5,
  ZTMMovieDescription_FieldNumber_Director = 6,
  ZTMMovieDescription_FieldNumber_Actor = 7,
  ZTMMovieDescription_FieldNumber_Cover = 8,
  ZTMMovieDescription_FieldNumber_Trailer = 9,
};

@interface ZTMMovieDescription : GPBMessage

/** 电影名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** 显示的图片 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *img;

/** MID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *mid;

/** 电影别名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *subTitle;

/** 上映时间 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *year;

/** 导演 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *director;

/** 演员 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *actor;

/** 海报 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *cover;

/** 预告片 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *trailer;

@end

#pragma mark - ZTMMusicDescription

typedef GPB_ENUM(ZTMMusicDescription_FieldNumber) {
  ZTMMusicDescription_FieldNumber_Title = 1,
  ZTMMusicDescription_FieldNumber_Src = 2,
  ZTMMusicDescription_FieldNumber_Cover = 3,
  ZTMMusicDescription_FieldNumber_Sid = 4,
  ZTMMusicDescription_FieldNumber_Source = 5,
  ZTMMusicDescription_FieldNumber_SourceURL = 6,
  ZTMMusicDescription_FieldNumber_Name = 7,
  ZTMMusicDescription_FieldNumber_Author = 8,
  ZTMMusicDescription_FieldNumber_AlbumName = 9,
  ZTMMusicDescription_FieldNumber_AlbumArtURL = 10,
  ZTMMusicDescription_FieldNumber_ArtistName = 11,
};

@interface ZTMMusicDescription : GPBMessage

/** 标题 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** 播放链接 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *src;

/** 封面 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *cover;

/** 外部ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sid;

/** 来源 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *source;

/** 来源链接 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sourceURL;

/** 歌曲名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 歌手 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *author;

/** 专辑名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *albumName;

/** 专辑图片 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *albumArtURL;

/** 专辑所属歌手 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *artistName;

@end

#pragma mark - ZTMPhotoDescription

typedef GPB_ENUM(ZTMPhotoDescription_FieldNumber) {
  ZTMPhotoDescription_FieldNumber_Photo = 1,
};

@interface ZTMPhotoDescription : GPBMessage

/** 照片内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *photo;

@end

#pragma mark - ZTMProductDescription

typedef GPB_ENUM(ZTMProductDescription_FieldNumber) {
  ZTMProductDescription_FieldNumber_Title = 1,
  ZTMProductDescription_FieldNumber_Description_p = 2,
  ZTMProductDescription_FieldNumber_Pictures = 3,
  ZTMProductDescription_FieldNumber_Price = 4,
  ZTMProductDescription_FieldNumber_RemainingCount = 5,
  ZTMProductDescription_FieldNumber_SoldCont = 6,
  ZTMProductDescription_FieldNumber_MaxBuy = 7,
  ZTMProductDescription_FieldNumber_OriginPrice = 8,
  ZTMProductDescription_FieldNumber_ExpressPrice = 9,
  ZTMProductDescription_FieldNumber_IsActive = 10,
  ZTMProductDescription_FieldNumber_CreateAt = 11,
  ZTMProductDescription_FieldNumber_UpdateAt = 12,
  ZTMProductDescription_FieldNumber_StartAt = 13,
};

@interface ZTMProductDescription : GPBMessage

/** 标题 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** 描述 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

/** 图片, 多张用逗号分隔 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pictures;

/** 价格 */
@property(nonatomic, readwrite) int32_t price;

/** 剩余数量 */
@property(nonatomic, readwrite) int32_t remainingCount;

/** 购买数量 */
@property(nonatomic, readwrite) int32_t soldCont;

/** 最大购买量 */
@property(nonatomic, readwrite) int32_t maxBuy;

/** 原价 */
@property(nonatomic, readwrite) int32_t originPrice;

/** 物流价格 */
@property(nonatomic, readwrite) int32_t expressPrice;

/** 是否活动 */
@property(nonatomic, readwrite) int32_t isActive;

/** 创建时间 */
@property(nonatomic, readwrite) uint32_t createAt;

/** 更新时间 */
@property(nonatomic, readwrite) uint32_t updateAt;

/** 开始时间 */
@property(nonatomic, readwrite) uint32_t startAt;

@end

#pragma mark - ZTMPunchRecord

typedef GPB_ENUM(ZTMPunchRecord_FieldNumber) {
  ZTMPunchRecord_FieldNumber_SenseId = 1,
  ZTMPunchRecord_FieldNumber_Times = 2,
  ZTMPunchRecord_FieldNumber_CreateAtPb = 3,
  ZTMPunchRecord_FieldNumber_Value1 = 4,
  ZTMPunchRecord_FieldNumber_Value2 = 5,
};

@interface ZTMPunchRecord : GPBMessage

/** 对应的感言ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *senseId;

/** 打卡第N次 */
@property(nonatomic, readwrite) int32_t times;

/** 创建时间 */
@property(nonatomic, readwrite) uint32_t createAtPb;

/** 打卡数值1 */
@property(nonatomic, readwrite) float value1;

/** 打卡数值2 */
@property(nonatomic, readwrite) float value2;

@end

#pragma mark - ZTMSoundDescription

typedef GPB_ENUM(ZTMSoundDescription_FieldNumber) {
  ZTMSoundDescription_FieldNumber_Src = 1,
  ZTMSoundDescription_FieldNumber_SamplesArray = 2,
  ZTMSoundDescription_FieldNumber_SampleCount = 3,
  ZTMSoundDescription_FieldNumber_SampleRate = 4,
  ZTMSoundDescription_FieldNumber_Duration = 5,
  ZTMSoundDescription_FieldNumber_RecordAt = 6,
  ZTMSoundDescription_FieldNumber_CurrentSampleCount = 7,
};

@interface ZTMSoundDescription : GPBMessage

/** 链接 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *src;

/** 用于前期展示的采样数据 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *samplesArray;
/** The number of items in @c samplesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger samplesArray_Count;

/** 总的采样数 */
@property(nonatomic, readwrite) int32_t sampleCount;

/** 采样率 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sampleRate;

/** 播放时长（毫秒） */
@property(nonatomic, readwrite) int32_t duration;

/** 录制时间 */
@property(nonatomic, readwrite) uint32_t recordAt;

/** 当前取到的采样数（为前端使用） */
@property(nonatomic, readwrite) int32_t currentSampleCount;

@end

#pragma mark - ZTMVideoDescription

typedef GPB_ENUM(ZTMVideoDescription_FieldNumber) {
  ZTMVideoDescription_FieldNumber_Src = 1,
  ZTMVideoDescription_FieldNumber_Cover = 2,
  ZTMVideoDescription_FieldNumber_Sticker = 3,
  ZTMVideoDescription_FieldNumber_Duration = 4,
};

@interface ZTMVideoDescription : GPBMessage

/** 视频链接 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *src;

/** 封面 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *cover;

/** 贴纸 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sticker;

/** 播放时长（毫秒） */
@property(nonatomic, readwrite) int32_t duration;

@end

#pragma mark - ZTMVoteChoice

typedef GPB_ENUM(ZTMVoteChoice_FieldNumber) {
  ZTMVoteChoice_FieldNumber_Title = 1,
  ZTMVoteChoice_FieldNumber_Votes = 2,
  ZTMVoteChoice_FieldNumber_Img = 3,
};

@interface ZTMVoteChoice : GPBMessage

/** 投票选择名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** 投票数量 */
@property(nonatomic, readwrite) int32_t votes;

/** 投票图片 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *img;

@end

#pragma mark - ZTMChannelDescription

typedef GPB_ENUM(ZTMChannelDescription_FieldNumber) {
  ZTMChannelDescription_FieldNumber_Id_p = 1,
  ZTMChannelDescription_FieldNumber_Category = 2,
  ZTMChannelDescription_FieldNumber_UserId = 3,
  ZTMChannelDescription_FieldNumber_Name = 4,
  ZTMChannelDescription_FieldNumber_Icon = 5,
  ZTMChannelDescription_FieldNumber_Description_p = 6,
  ZTMChannelDescription_FieldNumber_IsActive = 8,
  ZTMChannelDescription_FieldNumber_IsVerify = 9,
  ZTMChannelDescription_FieldNumber_IsRecommend = 10,
  ZTMChannelDescription_FieldNumber_IsAnonymous = 11,
  ZTMChannelDescription_FieldNumber_CreateAt = 12,
  ZTMChannelDescription_FieldNumber_UpdateAt = 13,
  ZTMChannelDescription_FieldNumber_SenseCount = 14,
  ZTMChannelDescription_FieldNumber_SubscribeTimes = 15,
  ZTMChannelDescription_FieldNumber_UpdateDescAt = 16,
  ZTMChannelDescription_FieldNumber_LastPostAt = 17,
};

@interface ZTMChannelDescription : GPBMessage

/** ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** 分类 */
@property(nonatomic, readwrite) int32_t category;

/** 频道创建人的ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

/** 频道名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 频道ICON */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/** 频道描述 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

/** 是否活动的频道 */
@property(nonatomic, readwrite) int32_t isActive;

/** 是否审核通过 */
@property(nonatomic, readwrite) int32_t isVerify;

/** 是否是推荐 */
@property(nonatomic, readwrite) int32_t isRecommend;

/** 是否匿名, 一般匿名的频道都会增加[匿名]前缀 */
@property(nonatomic, readwrite) int32_t isAnonymous;

/** 创建时间 */
@property(nonatomic, readwrite) uint32_t createAt;

/** 更新时间 */
@property(nonatomic, readwrite) uint32_t updateAt;

/** 频道感言发表次数 */
@property(nonatomic, readwrite) int32_t senseCount;

/** 订阅次数 */
@property(nonatomic, readwrite) int32_t subscribeTimes;

/** 描述更新时间 */
@property(nonatomic, readwrite) uint32_t updateDescAt;

/** 最近发布感言的时间 */
@property(nonatomic, readwrite) uint32_t lastPostAt;

@end

#pragma mark - ZTMChannelPermission

typedef GPB_ENUM(ZTMChannelPermission_FieldNumber) {
  ZTMChannelPermission_FieldNumber_Post = 1,
  ZTMChannelPermission_FieldNumber_Subscribe = 2,
  ZTMChannelPermission_FieldNumber_Share = 3,
  ZTMChannelPermission_FieldNumber_Manage = 4,
};

@interface ZTMChannelPermission : GPBMessage

/** 是否可发表，0：否，1：是 */
@property(nonatomic, readwrite) int32_t post;

/** 是否可订阅，0：否，1：是 */
@property(nonatomic, readwrite) int32_t subscribe;

/** 是否可分享，0：否，1：是 */
@property(nonatomic, readwrite) int32_t share;

/** 是否可管理，0：否，1：是 */
@property(nonatomic, readwrite) int32_t manage;

@end

#pragma mark - ZTMSenseDescription

typedef GPB_ENUM(ZTMSenseDescription_FieldNumber) {
  ZTMSenseDescription_FieldNumber_Id_p = 1,
  ZTMSenseDescription_FieldNumber_Category = 2,
  ZTMSenseDescription_FieldNumber_ChannelId = 3,
  ZTMSenseDescription_FieldNumber_UserId = 4,
  ZTMSenseDescription_FieldNumber_CreateAt = 5,
  ZTMSenseDescription_FieldNumber_UpdateAt = 6,
  ZTMSenseDescription_FieldNumber_IsFolded = 7,
  ZTMSenseDescription_FieldNumber_IsActive = 8,
  ZTMSenseDescription_FieldNumber_Likes = 9,
  ZTMSenseDescription_FieldNumber_Views = 10,
  ZTMSenseDescription_FieldNumber_PunchTimes = 11,
};

@interface ZTMSenseDescription : GPBMessage

/**  ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/**  分类 */
@property(nonatomic, readwrite) int32_t category;

/**  频道ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *channelId;

/**  发布人ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

/**  创建时间 */
@property(nonatomic, readwrite) uint32_t createAt;

/**  更新时间 */
@property(nonatomic, readwrite) uint32_t updateAt;

/**  是否折叠了 0：否，1：是 */
@property(nonatomic, readwrite) int32_t isFolded;

/**  是否活动 0：否，1：是 */
@property(nonatomic, readwrite) int32_t isActive;

/**  同感数 */
@property(nonatomic, readwrite) int32_t likes;

/**  查看数 */
@property(nonatomic, readwrite) int32_t views;

/**  发送该感言时打卡次数 */
@property(nonatomic, readwrite) int32_t punchTimes;

@end

#pragma mark - ZTMSensePermission

typedef GPB_ENUM(ZTMSensePermission_FieldNumber) {
  ZTMSensePermission_FieldNumber_Ignore = 1,
  ZTMSensePermission_FieldNumber_Fold = 2,
  ZTMSensePermission_FieldNumber_Indict = 3,
  ZTMSensePermission_FieldNumber_Delete_p = 4,
  ZTMSensePermission_FieldNumber_MarkAsSpam = 5,
};

@interface ZTMSensePermission : GPBMessage

/**  是否忽略，0：否，1：是 */
@property(nonatomic, readwrite) int32_t ignore;

/**  是否可折叠，0：否，1：是 */
@property(nonatomic, readwrite) int32_t fold;

/**  是否可举报，0：否，1：是 */
@property(nonatomic, readwrite) int32_t indict;

/**  是否可删除，0：否，1：是 */
@property(nonatomic, readwrite) int32_t delete_p;

/**  是否可标为垃圾，0：否，1：是 */
@property(nonatomic, readwrite) int32_t markAsSpam;

@end

#pragma mark - ZTMConfigurationSplash

typedef GPB_ENUM(ZTMConfigurationSplash_FieldNumber) {
  ZTMConfigurationSplash_FieldNumber_URL = 1,
  ZTMConfigurationSplash_FieldNumber_Style = 2,
  ZTMConfigurationSplash_FieldNumber_Duration = 3,
  ZTMConfigurationSplash_FieldNumber_Time = 4,
  ZTMConfigurationSplash_FieldNumber_IsNeedLogin = 5,
  ZTMConfigurationSplash_FieldNumber_IsFirstOpen = 6,
  ZTMConfigurationSplash_FieldNumber_AppVersion = 7,
};

@interface ZTMConfigurationSplash : GPBMessage

/**  闪屏内容的url */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

/**  展示闪屏内容的视图 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *style;

/**  展示时长 */
@property(nonatomic, readwrite) int32_t duration;

/**  展示时段 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *time;

/**  是否需要登陆才显示 */
@property(nonatomic, readwrite) int32_t isNeedLogin;

/**  是否第一次打开时显示 */
@property(nonatomic, readwrite) int32_t isFirstOpen;

/**  设置 为了配合首次启动展示，而增加的系统版本号，使用发布号，不填写则包含所有版本，如iOS-155, Android-124 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *appVersion;

@end

#pragma mark - ZTMConfigurationTab

typedef GPB_ENUM(ZTMConfigurationTab_FieldNumber) {
  ZTMConfigurationTab_FieldNumber_URL = 1,
  ZTMConfigurationTab_FieldNumber_Style = 2,
  ZTMConfigurationTab_FieldNumber_Title = 3,
  ZTMConfigurationTab_FieldNumber_Icon = 4,
  ZTMConfigurationTab_FieldNumber_SelectedIcon = 5,
  ZTMConfigurationTab_FieldNumber_IsSelected = 6,
};

@interface ZTMConfigurationTab : GPBMessage

/**  主标签页内容的url */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

/**  主标签页内容的视图 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *style;

/**  小提示信息 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/**  默认图标 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *icon;

/**  选中(执行过)状态图标 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *selectedIcon;

/**  默认是否选中 */
@property(nonatomic, readwrite) int32_t isSelected;

@end

#pragma mark - ZTMConfigurationUrlDomain

typedef GPB_ENUM(ZTMConfigurationUrlDomain_FieldNumber) {
  ZTMConfigurationUrlDomain_FieldNumber_Api = 1,
  ZTMConfigurationUrlDomain_FieldNumber_ApiScheme = 2,
  ZTMConfigurationUrlDomain_FieldNumber_ApiUrlsArray = 3,
  ZTMConfigurationUrlDomain_FieldNumber_Im = 4,
  ZTMConfigurationUrlDomain_FieldNumber_ImScheme = 5,
  ZTMConfigurationUrlDomain_FieldNumber_ImUrlsArray = 6,
  ZTMConfigurationUrlDomain_FieldNumber_Storage = 7,
  ZTMConfigurationUrlDomain_FieldNumber_StorageScheme = 8,
  ZTMConfigurationUrlDomain_FieldNumber_StorageUrlsArray = 9,
  ZTMConfigurationUrlDomain_FieldNumber_Bucket = 10,
  ZTMConfigurationUrlDomain_FieldNumber_BucketEndPoint = 11,
};

@interface ZTMConfigurationUrlDomain : GPBMessage

/**  接口服务的主域名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *api;

/**  接口服务的协议名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *apiScheme;

/**  接口服务的备用域名列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *apiUrlsArray;
/** The number of items in @c apiUrlsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger apiUrlsArray_Count;

/**  聊天接口服务的主域名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *im;

/**  聊天接口服务的协议名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *imScheme;

/**  聊天接口服务的备用域名列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *imUrlsArray;
/** The number of items in @c imUrlsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger imUrlsArray_Count;

/**  存储服务的主域名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *storage;

/**  存储接口服务的协议名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *storageScheme;

/**  存储服务的备用域名列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *storageUrlsArray;
/** The number of items in @c storageUrlsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger storageUrlsArray_Count;

/**  OSS bucket名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bucket;

/**  OSS完整的EndPoint */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bucketEndPoint;

@end

#pragma mark - ZTMConfigurationVersion

typedef GPB_ENUM(ZTMConfigurationVersion_FieldNumber) {
  ZTMConfigurationVersion_FieldNumber_SupportVersion = 1,
  ZTMConfigurationVersion_FieldNumber_LastVersion = 2,
  ZTMConfigurationVersion_FieldNumber_LastVersionName = 3,
  ZTMConfigurationVersion_FieldNumber_LastVersionURL = 4,
  ZTMConfigurationVersion_FieldNumber_LastVersionMessage = 5,
};

@interface ZTMConfigurationVersion : GPBMessage

/**  支持的版本号, 低于该版本的必须升级 */
@property(nonatomic, readwrite) int32_t supportVersion;

/**  最新的版本号 */
@property(nonatomic, readwrite) int32_t lastVersion;

/**  最新版本的名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *lastVersionName;

/**  最新版本的地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *lastVersionURL;

/**  最新版本描述 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *lastVersionMessage;

@end

#pragma mark - ZTMDiscoveryTheme

typedef GPB_ENUM(ZTMDiscoveryTheme_FieldNumber) {
  ZTMDiscoveryTheme_FieldNumber_Id_p = 1,
  ZTMDiscoveryTheme_FieldNumber_Title = 2,
  ZTMDiscoveryTheme_FieldNumber_Img = 3,
  ZTMDiscoveryTheme_FieldNumber_URL = 4,
  ZTMDiscoveryTheme_FieldNumber_Style = 5,
  ZTMDiscoveryTheme_FieldNumber_Rule = 6,
};

@interface ZTMDiscoveryTheme : GPBMessage

/** ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** 专题标题 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** 专题图片 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *img;

/** 专题内容地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

/** 展示专题的容器类型 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *style;

/** 展示规则 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *rule;

@end

#pragma mark - ZTMRegionDescription

typedef GPB_ENUM(ZTMRegionDescription_FieldNumber) {
  ZTMRegionDescription_FieldNumber_Name = 1,
  ZTMRegionDescription_FieldNumber_Pinyin = 2,
};

@interface ZTMRegionDescription : GPBMessage

/**  名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/**  拼音 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pinyin;

@end

#pragma mark - ZTMReplyDescription

typedef GPB_ENUM(ZTMReplyDescription_FieldNumber) {
  ZTMReplyDescription_FieldNumber_Id_p = 1,
  ZTMReplyDescription_FieldNumber_CreateAt = 2,
  ZTMReplyDescription_FieldNumber_TargetType = 3,
  ZTMReplyDescription_FieldNumber_Content = 4,
  ZTMReplyDescription_FieldNumber_UserId = 5,
  ZTMReplyDescription_FieldNumber_ReplyToId = 6,
  ZTMReplyDescription_FieldNumber_ReplyToUserId = 7,
  ZTMReplyDescription_FieldNumber_TargetId = 8,
  ZTMReplyDescription_FieldNumber_TargetUserId = 9,
  ZTMReplyDescription_FieldNumber_TargetParentId = 10,
  ZTMReplyDescription_FieldNumber_TargetParentUserId = 11,
  ZTMReplyDescription_FieldNumber_ContentType = 12,
  ZTMReplyDescription_FieldNumber_ContentLength = 13,
  ZTMReplyDescription_FieldNumber_TotalPraises = 14,
};

@interface ZTMReplyDescription : GPBMessage

/**  ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/**  创建时间 */
@property(nonatomic, readwrite) uint32_t createAt;

/**  目标类型 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *targetType;

/**  内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

/**  评论人 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

/**  回复评论ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *replyToId;

/**  回复评论所有人ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *replyToUserId;

/**  目标ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *targetId;

/**  目标所有人ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *targetUserId;

/**  目标父级ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *targetParentId;

/**  目标父级所有人ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *targetParentUserId;

/**  媒体类型 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *contentType;

/**  媒体长度（毫秒） */
@property(nonatomic, readwrite, copy, null_resettable) NSString *contentLength;

/**  总点赞数 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *totalPraises;

@end

#pragma mark - ZTMUserDescription

typedef GPB_ENUM(ZTMUserDescription_FieldNumber) {
  ZTMUserDescription_FieldNumber_Id_p = 1,
  ZTMUserDescription_FieldNumber_UserName = 2,
  ZTMUserDescription_FieldNumber_Avatar = 3,
  ZTMUserDescription_FieldNumber_IsActive = 4,
  ZTMUserDescription_FieldNumber_Sex = 5,
  ZTMUserDescription_FieldNumber_CreateAt = 6,
  ZTMUserDescription_FieldNumber_CityCode = 7,
  ZTMUserDescription_FieldNumber_TimeZone = 8,
  ZTMUserDescription_FieldNumber_TokenServer = 9,
  ZTMUserDescription_FieldNumber_Tel = 10,
  ZTMUserDescription_FieldNumber_OpenId = 11,
  ZTMUserDescription_FieldNumber_IsStaff = 12,
  ZTMUserDescription_FieldNumber_IsAgreeOwnerNotice = 13,
  ZTMUserDescription_FieldNumber_IsAgreeFinancialRiskNotice = 14,
  ZTMUserDescription_FieldNumber_IsMyContacts = 15,
};

@interface ZTMUserDescription : GPBMessage

/**  用户ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/**  用户名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;

/**  用户头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *avatar;

/**  是否活跃 */
@property(nonatomic, readwrite) int32_t isActive;

/**  性别 */
@property(nonatomic, readwrite) int32_t sex;

/**  创建时间 */
@property(nonatomic, readwrite) uint32_t createAt;

/**  所在城市编码 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *cityCode;

/**  所在时区 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *timeZone;

/**  服务器端令牌 (最后登录的) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tokenServer;

/**  手机 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tel;

/**  微信 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *openId;

/**  是否是内部员工 */
@property(nonatomic, readwrite) int32_t isStaff;

/** 是否确定了频道主须知 */
@property(nonatomic, readwrite) int32_t isAgreeOwnerNotice;

/** 是否查看过金融风险提醒 */
@property(nonatomic, readwrite) int32_t isAgreeFinancialRiskNotice;

/** 是否是自己的联系人 */
@property(nonatomic, readwrite) int32_t isMyContacts;

@end

#pragma mark - ZTMSticker

typedef GPB_ENUM(ZTMSticker_FieldNumber) {
  ZTMSticker_FieldNumber_Id_p = 1,
  ZTMSticker_FieldNumber_URL = 2,
  ZTMSticker_FieldNumber_Meaning = 3,
  ZTMSticker_FieldNumber_IsLiked = 4,
};

@interface ZTMSticker : GPBMessage

/** ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** 贴图地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

/** 含义 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *meaning;

/** 是否自己收藏了 */
@property(nonatomic, readwrite) int32_t isLiked;

@end

#pragma mark - ZTMSharingMessage

typedef GPB_ENUM(ZTMSharingMessage_FieldNumber) {
  ZTMSharingMessage_FieldNumber_ShareId = 1,
  ZTMSharingMessage_FieldNumber_URL = 2,
  ZTMSharingMessage_FieldNumber_WbMsg = 3,
  ZTMSharingMessage_FieldNumber_WbImg = 4,
  ZTMSharingMessage_FieldNumber_WbURL = 5,
  ZTMSharingMessage_FieldNumber_WbShortURL = 6,
  ZTMSharingMessage_FieldNumber_WxTitle = 7,
  ZTMSharingMessage_FieldNumber_WxSubtitle = 8,
  ZTMSharingMessage_FieldNumber_WxURL = 9,
  ZTMSharingMessage_FieldNumber_PyqTitle = 10,
  ZTMSharingMessage_FieldNumber_PyqURL = 11,
  ZTMSharingMessage_FieldNumber_QqTitle = 12,
  ZTMSharingMessage_FieldNumber_QqSubtitle = 13,
  ZTMSharingMessage_FieldNumber_QqURL = 14,
  ZTMSharingMessage_FieldNumber_QzoneTitle = 15,
  ZTMSharingMessage_FieldNumber_QzoneURL = 16,
  ZTMSharingMessage_FieldNumber_Thumbnail = 17,
  ZTMSharingMessage_FieldNumber_MediaURL = 18,
};

@interface ZTMSharingMessage : GPBMessage

/** 分享ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *shareId;

/** 跳转路径 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

/** 微博消息 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *wbMsg;

/** 微博大图 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *wbImg;

/** 微博跳转路径 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *wbURL;

/** 微博短链接跳转路径 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *wbShortURL;

/** 微信主标题 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *wxTitle;

/** 微信副标题 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *wxSubtitle;

/** 微信跳转路径 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *wxURL;

/** 微信朋友圈主标题 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pyqTitle;

/** 朋友圈跳转路径 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pyqURL;

/** QQ主标题 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *qqTitle;

/** QQ副标题 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *qqSubtitle;

/** QQ跳转路径 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *qqURL;

/** Qzone主标题 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *qzoneTitle;

/** Qzone跳转路径 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *qzoneURL;

/** QQ微信上显示的缩略图 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *thumbnail;

/** 媒体路径 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *mediaURL;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
